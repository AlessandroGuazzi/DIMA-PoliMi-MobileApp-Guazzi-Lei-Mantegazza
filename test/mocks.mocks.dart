// Mocks generated by Mockito 5.4.4 from annotations
// in dima_project/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:dima_project/models/activityModel.dart' as _i7;
import 'package:dima_project/models/tripModel.dart' as _i3;
import 'package:dima_project/models/userModel.dart' as _i6;
import 'package:dima_project/services/authService.dart' as _i9;
import 'package:dima_project/services/databaseService.dart' as _i5;
import 'package:dima_project/services/googlePlacesService.dart' as _i11;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_1<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTripModel_2 extends _i1.SmartFake implements _i3.TripModel {
  _FakeTripModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_3 extends _i1.SmartFake implements _i4.UserMetadata {
  _FakeUserMetadata_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_4 extends _i1.SmartFake implements _i4.MultiFactor {
  _FakeMultiFactor_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_5 extends _i1.SmartFake implements _i4.IdTokenResult {
  _FakeIdTokenResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_6 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_7 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_8 extends _i1.SmartFake implements _i4.User {
  _FakeUser_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentReference_9<T1 extends Object?> extends _i1.SmartFake
    implements _i2.DocumentReference<T1> {
  _FakeDocumentReference_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnapshotMetadata_10 extends _i1.SmartFake
    implements _i2.SnapshotMetadata {
  _FakeSnapshotMetadata_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i5.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.FirebaseFirestore);

  @override
  _i2.CollectionReference<_i6.UserModel> get userCollection =>
      (super.noSuchMethod(
        Invocation.getter(#userCollection),
        returnValue: _FakeCollectionReference_1<_i6.UserModel>(
          this,
          Invocation.getter(#userCollection),
        ),
      ) as _i2.CollectionReference<_i6.UserModel>);

  @override
  _i2.CollectionReference<_i3.TripModel> get tripCollection =>
      (super.noSuchMethod(
        Invocation.getter(#tripCollection),
        returnValue: _FakeCollectionReference_1<_i3.TripModel>(
          this,
          Invocation.getter(#tripCollection),
        ),
      ) as _i2.CollectionReference<_i3.TripModel>);

  @override
  _i2.CollectionReference<_i7.ActivityModel> get activityCollection =>
      (super.noSuchMethod(
        Invocation.getter(#activityCollection),
        returnValue: _FakeCollectionReference_1<_i7.ActivityModel>(
          this,
          Invocation.getter(#activityCollection),
        ),
      ) as _i2.CollectionReference<_i7.ActivityModel>);

  @override
  _i8.Future<dynamic> initializeUserData(_i6.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeUserData,
          [user],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<dynamic> updateUserData(_i6.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserData,
          [user],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i6.UserModel?> getUserByUid(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserByUid,
          [uid],
        ),
        returnValue: _i8.Future<_i6.UserModel?>.value(),
      ) as _i8.Future<_i6.UserModel?>);

  @override
  _i8.Future<List<_i3.TripModel>> getExplorerTrips() => (super.noSuchMethod(
        Invocation.method(
          #getExplorerTrips,
          [],
        ),
        returnValue: _i8.Future<List<_i3.TripModel>>.value(<_i3.TripModel>[]),
      ) as _i8.Future<List<_i3.TripModel>>);

  @override
  _i8.Future<List<_i3.TripModel>> getHomePageTrips() => (super.noSuchMethod(
        Invocation.method(
          #getHomePageTrips,
          [],
        ),
        returnValue: _i8.Future<List<_i3.TripModel>>.value(<_i3.TripModel>[]),
      ) as _i8.Future<List<_i3.TripModel>>);

  @override
  _i8.Future<List<_i3.TripModel>> getCompletedTrips(
          [String? userId = r'defaultUserId']) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletedTrips,
          [userId],
        ),
        returnValue: _i8.Future<List<_i3.TripModel>>.value(<_i3.TripModel>[]),
      ) as _i8.Future<List<_i3.TripModel>>);

  @override
  _i8.Future<dynamic> updateTrip(_i3.TripModel? trip) => (super.noSuchMethod(
        Invocation.method(
          #updateTrip,
          [trip],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<List<_i7.ActivityModel>> getTripActivities(_i3.TripModel? trip) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTripActivities,
          [trip],
        ),
        returnValue:
            _i8.Future<List<_i7.ActivityModel>>.value(<_i7.ActivityModel>[]),
      ) as _i8.Future<List<_i7.ActivityModel>>);

  @override
  _i8.Future<void> createTrip(_i3.TripModel? trip) => (super.noSuchMethod(
        Invocation.method(
          #createTrip,
          [trip],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> handleTripSave(
    bool? isSaved,
    String? tripId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleTripSave,
          [
            isSaved,
            tripId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> createActivity(_i7.ActivityModel? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #createActivity,
          [activity],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteActivity(_i7.ActivityModel? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteActivity,
          [activity],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteTrip(String? tripId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTrip,
          [tripId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateTripCost(
    String? tripId,
    num? cost,
    bool? isAdd,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTripCost,
          [
            tripId,
            cost,
            isAdd,
            type,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.TripModel> loadTrip(String? tripId) => (super.noSuchMethod(
        Invocation.method(
          #loadTrip,
          [tripId],
        ),
        returnValue: _i8.Future<_i3.TripModel>.value(_FakeTripModel_2(
          this,
          Invocation.method(
            #loadTrip,
            [tripId],
          ),
        )),
      ) as _i8.Future<_i3.TripModel>);

  @override
  _i8.Future<void> updateActivity(
    String? id,
    _i7.ActivityModel? activity,
    num? cost,
    bool? isAdd,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [
            id,
            activity,
            cost,
            isAdd,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i3.TripModel>> getTripsByIds(List<String>? tripIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTripsByIds,
          [tripIds],
        ),
        returnValue: _i8.Future<List<_i3.TripModel>>.value(<_i3.TripModel>[]),
      ) as _i8.Future<List<_i3.TripModel>>);

  @override
  _i8.Future<void> updateTripPrivacy(
    String? tripId,
    bool? isPrivate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTripPrivacy,
          [
            tripId,
            isPrivate,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i9.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Stream<_i4.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i8.Stream<_i4.User?>.empty(),
      ) as _i8.Stream<_i4.User?>);

  @override
  _i8.Future<void> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> createUserWithEmailAndPassword({
    required String? name,
    required String? surname,
    required String? email,
    required String? password,
    required String? username,
    required DateTime? birthDate,
    required String? nationality,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #name: name,
            #surname: surname,
            #email: email,
            #password: password,
            #username: username,
            #birthDate: birthDate,
            #nationality: nationality,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateUserWithEmailAndPassword({
    required String? name,
    required String? surname,
    required String? email,
    required String? username,
    required String? description,
    required DateTime? birthDate,
    required String? nationality,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserWithEmailAndPassword,
          [],
          {
            #name: name,
            #surname: surname,
            #email: email,
            #username: username,
            #description: description,
            #birthDate: birthDate,
            #nationality: nationality,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i4.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
      ) as bool);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  _i4.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_3(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i4.UserMetadata);

  @override
  List<_i4.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i4.UserInfo>[],
      ) as List<_i4.UserInfo>);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  _i4.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_4(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i4.MultiFactor);

  @override
  _i8.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<_i4.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i8.Future<_i4.IdTokenResult>.value(_FakeIdTokenResult_5(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i8.Future<_i4.IdTokenResult>);

  @override
  _i8.Future<_i4.UserCredential> linkWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i8.Future<_i4.UserCredential>);

  @override
  _i8.Future<_i4.UserCredential> linkWithProvider(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i8.Future<_i4.UserCredential>);

  @override
  _i8.Future<_i4.UserCredential> reauthenticateWithProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i8.Future<_i4.UserCredential>);

  @override
  _i8.Future<_i4.UserCredential> reauthenticateWithPopup(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i8.Future<_i4.UserCredential>);

  @override
  _i8.Future<void> reauthenticateWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i8.Future<_i4.UserCredential>);

  @override
  _i8.Future<void> linkWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i8.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_7(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i8.Future<_i4.ConfirmationResult>);

  @override
  _i8.Future<_i4.UserCredential> reauthenticateWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i8.Future<_i4.UserCredential>);

  @override
  _i8.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendEmailVerification(
          [_i4.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i8.Future<_i4.User>.value(_FakeUser_8(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i8.Future<_i4.User>);

  @override
  _i8.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updatePhoneNumber(
          _i4.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [DocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentSnapshot<T extends Object?> extends _i1.Mock
    implements _i2.DocumentSnapshot<T> {
  MockDocumentSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i2.DocumentReference<T> get reference => (super.noSuchMethod(
        Invocation.getter(#reference),
        returnValue: _FakeDocumentReference_9<T>(
          this,
          Invocation.getter(#reference),
        ),
      ) as _i2.DocumentReference<T>);

  @override
  _i2.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_10(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i2.SnapshotMetadata);

  @override
  bool get exists => (super.noSuchMethod(
        Invocation.getter(#exists),
        returnValue: false,
      ) as bool);

  @override
  dynamic get(Object? field) => super.noSuchMethod(Invocation.method(
        #get,
        [field],
      ));

  @override
  dynamic operator [](Object? field) => super.noSuchMethod(Invocation.method(
        #[],
        [field],
      ));
}

/// A class which mocks [GooglePlacesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGooglePlacesService extends _i1.Mock
    implements _i11.GooglePlacesService {
  MockGooglePlacesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  _i8.Future<List<Map<String, String>>> searchAutocomplete(
    String? query,
    List<String>? countryCodes,
    String? searchType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchAutocomplete,
          [
            query,
            countryCodes,
            searchType,
          ],
        ),
        returnValue: _i8.Future<List<Map<String, String>>>.value(
            <Map<String, String>>[]),
      ) as _i8.Future<List<Map<String, String>>>);

  @override
  _i8.Future<Map<String, double>> getCoordinates(String? placeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoordinates,
          [placeId],
        ),
        returnValue: _i8.Future<Map<String, double>>.value(<String, double>{}),
      ) as _i8.Future<Map<String, double>>);

  @override
  _i8.Future<String> getCountryImageRef(String? country) => (super.noSuchMethod(
        Invocation.method(
          #getCountryImageRef,
          [country],
        ),
        returnValue: _i8.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getCountryImageRef,
            [country],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  String getImageUrl(String? imageRef) => (super.noSuchMethod(
        Invocation.method(
          #getImageUrl,
          [imageRef],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #getImageUrl,
            [imageRef],
          ),
        ),
      ) as String);
}
